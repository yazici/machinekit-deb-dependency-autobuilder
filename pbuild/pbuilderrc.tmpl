#							-*-shell-script-*-
# Template variables
TOPDIR="@TOPDIR@"
# Where finished packages go
BUILDRESULT="@BUILDRESULT@"
# Downloaded package cache
APTCACHE="@APTCACHE@"
# ccache directory
CCACHEDIR="@CCACHEDIR@"
# Where the chroot tarball lives
CHROOTDIR="@CHROOTDIR@"
# Where to unpack the chroot and build
BUILDPLACE="@BUILDPLACE@"
# Local ppa with dependent packages
REPODIR="@REPODIR@"
# distro-arch string, e.g. wheezy-armhf
DISTRO_ARCH="@DISTRO_ARCH@"
# User to run as
BUILDUSERNAME="@PBUILDER_USER@"

# Extract distro and arch
DIST=${DISTRO_ARCH/-*/}
ARCH=${DISTRO_ARCH/*-/}

# bind mount ppa directory
BINDMOUNTS="$BINDMOUNTS $REPODIR"
OTHERMIRROR="deb [arch=$ARCH] file://$REPODIR $DIST main"

# # For building modules
# if test -n "$PACKAGE_DIR"; then
#     BINDMOUNTS="$BINDMOUNTS $TOPDIR/$PACKAGE_DIR"
# fi

# Other useful opts from cmdline:
# DEBBUILDOPTS=-Tbinary-arch
# DEBEMAIL='John Doe <jdoe@example.com>'

# Debian configuration
DEBIAN_SUITES=("wheezy" "squeeze" "jessie")
DEBIAN_MIRROR="ftp.at.debian.org"

# Ubuntu configuration
UBUNTU_SUITES=("precise" "lucid" "hardy")
UBUNTU_MIRROR="ftp.ubuntu.com"

# Keyring file
KEYRING=keyring.gpg
APTKEYRINGS=("${APTKEYRINGS[@]}" "$TOPDIR/admin/$KEYRING")

# Distribution
DISTRIBUTION=${DIST}

# Base tarball
BASETGZ="${CHROOTDIR}/base-${DIST}-${ARCH}.tgz"

# ccache
test -d ${CCACHEDIR} || mkdir -p ${CCACHEDIR}

# always log builds
PKGNAME_LOGFILE=yes
PKGNAME_LOGFILE_EXTENTION=-${ARCH}.build

# hook directory
HOOKDIR="${TOPDIR}/pbuild"

# extra packages for buildroot
EXTRA_PACKAGES="gnupg"
if test $DIST = wheezy; then
    # Stop repeated perl warnings about NFS, even when not on NFS
    EXTRA_PACKAGES="$EXTRA_PACKAGES,libfile-fcntllock-perl"
fi
# if test $ARCH = armhf; then
#     # Probably can be deleted
#     EXTRA_PACKAGES="$EXTRA_PACKAGES,uboot-mkimage"
# fi

# armhf needs qemu when not native
if test $ARCH = armhf -a $(uname -m) != armv7l; then
    DEBOOTSTRAP=qemu-debootstrap
fi

# set arch in debootstrap
DEBOOTSTRAPOPTS=(
    "${DEBOOTSTRAPOPTS[@]}"
    "--arch=${ARCH}"
    "--include=$EXTRA_PACKAGES"
    "--keyring=${TOPDIR}/admin/${KEYRING}"
)

# set arch for create mode
ARCHITECTURE=${ARCH}

# unexport ARCH; messes with at least kernel pkgs
export -n ARCH; unset ARCH


# compute MIRRORSITE and COMPONENTS values
if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
    # Debian configuration
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
    COMPONENTS="main contrib non-free"

elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
    COMPONENTS="main restricted universe multiverse"

else
    echo "Unknown distribution: $DIST"
    exit 1
fi


# Wheezy backports; also see the E05 hook that enables specific packages
if test ${DIST} = wheezy; then
    OTHERMIRROR="$OTHERMIRROR | deb $MIRRORSITE wheezy-backports $COMPONENTS"
fi


# Print diagnostics
echo "script = $(basename $0)"
for i in BASETGZ DISTRIBUTION APTCACHE MIRRORSITE COMPONENTS \
    DEBOOTSTRAPOPTS[@] OTHERMIRROR BINDMOUNTS REPODIR; do
    eval echo "$i = \${$i}"
done
