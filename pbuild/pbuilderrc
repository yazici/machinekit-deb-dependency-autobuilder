#							-*-shell-script-*-
# TOPDIR, ARCH and DIST should be passed in from outside
test -z "$TOPDIR" && echo "error:  TOPDIR undefined" 1>&2 && exit 1
test -z "$ARCH" && echo "error:  ARCH undefined" 1>&2 && exit 1
test -z "$DIST" && echo "error:  DIST undefined" 1>&2 && exit 1

# For dependent pkgs
if test -n "$INTERMEDIATE_REPO"; then
    BINDMOUNTS="$BINDMOUNTS $TOPDIR/$INTERMEDIATE_REPO"
    OTHERMIRROR="deb [arch=$ARCH] file://$TOPDIR/$INTERMEDIATE_REPO $DIST main"
fi

# For building modules
if test -n "$PACKAGE_DIR"; then
    BINDMOUNTS="$BINDMOUNTS $TOPDIR/$PACKAGE_DIR"
fi

# Other useful opts from cmdline:
# DEBBUILDOPTS=-Tbinary-arch
# DEBEMAIL='John Doe <jdoe@example.com>'

# Debian configuration
DEBIAN_SUITES=("wheezy" "squeeze" "jessie")
DEBIAN_MIRROR="ftp.at.debian.org"

# Ubuntu configuration
UBUNTU_SUITES=("precise" "lucid" "hardy")
UBUNTU_MIRROR="ftp.ubuntu.com"

# Keyring file
KEYRING=keyring.gpg
APTKEYRINGS=("${APTKEYRINGS[@]}" "$TOPDIR/admin/$KEYRING")

# Distribution
DISTRIBUTION=${DIST}

# Base tarball
BASETGZ="${TOPDIR}/chroots/base-${DIST}-${ARCH}.tgz"

# Where to build
BUILDPLACE="${TOPDIR}/build"

# Where to place finished pkgs
BUILDRESULT="${TOPDIR}/pkgs"

# cache for packages
APTCACHE="${TOPDIR}/aptcache"

# ccache
CCACHEDIR="${TOPDIR}/ccache"
test -d ${CCACHEDIR} || mkdir -p ${CCACHEDIR}

# always log builds
PKGNAME_LOGFILE=yes
PKGNAME_LOGFILE_EXTENTION=-${ARCH}.build

# hook directory
HOOKDIR="${TOPDIR}/pbuild"

# extra packages for buildroot
EXTRA_PACKAGES="gnupg"
if test $DIST = wheezy; then
    EXTRA_PACKAGES="$EXTRA_PACKAGES,libfile-fcntllock-perl"
fi
if test $ARCH = armhf; then
    EXTRA_PACKAGES="$EXTRA_PACKAGES,uboot-mkimage"
fi

# armhf needs qemu
if test $ARCH = armhf; then
    DEBOOTSTRAP=qemu-debootstrap
fi

# set arch in debootstrap
DEBOOTSTRAPOPTS=(
    "${DEBOOTSTRAPOPTS[@]}"
    "--arch=${ARCH}"
    "--include=$EXTRA_PACKAGES"
    "--keyring=${TOPDIR}/admin/${KEYRING}"
)

# set arch for create mode
ARCHITECTURE=${ARCH}

# unexport ARCH; messes with at least kernel pkgs
export -n ARCH; unset ARCH


# compute MIRRORSITE and COMPONENTS values
if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
    # Debian configuration
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
    COMPONENTS="main contrib non-free"

elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
    COMPONENTS="main restricted universe multiverse"

else
    echo "Unknown distribution: $DIST"
    exit 1
fi


# Hardy fixes
if test $DIST = hardy; then
    # Add backports; this isn't enough to fix building for hardy
    OTHERMIRROR="$OTHERMIRROR | deb http://archive.ubuntu.com/ubuntu hardy-backports main restricted universe multiverse"
fi


# Print diagnostics
echo "script = $(basename $0)"
for i in BASETGZ DISTRIBUTION APTCACHE MIRRORSITE COMPONENTS \
    DEBOOTSTRAPOPTS[@] OTHERMIRROR BINDMOUNTS INTERMEDIATE_REPO; do
    eval echo "$i = \${$i}"
done
